{"version":3,"sources":["myApp.js","Table/Table.js","TableSearch/TableSearch.js","FuncMap/FuncMap.js","Map/Map.js","index.js"],"names":["pageCount","props","className","onClick","onSort","bind","sortField","sort","data","undefined","map","item","job_title","organization_name","onMapComponent","location_coordinates","onRemove","_id","useState","value","setValue","onSearch","type","onChange","event","target","mapStyles","position","width","height","CurrentLocation","static","zoom","centerAroundCurrentLocation","visible","lt","lg","state","currentLocation","lat","lng","this","current","maps","google","center","LatLng","panTo","navigator","geolocation","getCurrentPosition","setState","loadMap","prevProps","prevState","recenterMap","mapRef","node","ReactDOM","findDOMNode","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","Component","MapCont","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","x","y","name","GoogleApiWrapper","apiKey","filteredData","App","currentPage","search","cloneData","concat","sortType","orderedData","_","orderBy","pageChangeHandler","selected","searchHandler","id","filter","el","getMapComponent","element","render","document","getElementById","a","axios","get","response","Error","message","some","toLowerCase","includes","displayData","getFilteredData","length","chunk","Math","ceil","Fragment","TableSearch","Table","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","forcePage","StrictMode"],"mappings":"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","file":"static/js/main.28372944.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport _ from 'lodash';\r\nimport ReactPaginate from 'react-paginate';\r\nimport Table from './Table/Table';\r\nimport TableSearch from './TableSearch/TableSearch';\r\nimport MapCont from './Map/Map';\r\n\r\nconst pageSize = 10;\r\nlet pageCount;\r\nlet filteredData=null;\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    data: [],\r\n    sort: 'asc',\r\n    sortField: 'id',\r\n    currentPage: 0,\r\n    search: '',\r\n  };\r\n  \r\n  componentDidMount() {\r\n    (async () => {\r\n      try {\r\n        const response = await axios.get(\"api/jobs\")\r\n        this.setState ({data: response.data})\r\n        return this.state.data\r\n      } catch (err) {\r\n        throw new Error(err.message)\r\n      }\r\n    })()\r\n    const {data, sortField, sort} = this.state\r\n    this.setState({\r\n      data: _.orderBy(data, sortField, sort)\r\n    })\r\n  }\r\n\r\n  onSort = sortField => {\r\n    const cloneData = this.state.data.concat();\r\n    const sortType = this.state.sort === 'asc' ? 'desc' : 'asc';\r\n    const orderedData = _.orderBy(cloneData, sortField, sortType);\r\n    this.setState({\r\n      data: orderedData,\r\n      sort: sortType,\r\n      sortField\r\n    })\r\n  }\r\n\r\n  pageChangeHandler = ({selected}) => (\r\n    this.setState({currentPage: selected})\r\n  )\r\n\r\n  searchHandler = search => {\r\n    this.setState({search, currentPage: 0})\r\n  }\r\n\r\n  getFilteredData(){\r\n    const {data, search} = this.state;\r\n    if (!search) {\r\n      return data\r\n    };\r\n    if (data.some(el => {\r\n      return el['job_title'].toLowerCase().includes(search.toLowerCase())}) === false) {\r\n      return null\r\n    } else {return data.filter(el => {\r\n        return el['job_title'].toLowerCase().includes(search.toLowerCase())\r\n    })};\r\n  }\r\n\r\n  onRemove = (id) => {\r\n    const {data} = this.state;\r\n    this.setState({data: data.filter(el => {\r\n        return el._id !== id\r\n    })})\r\n  }\r\n\r\n  getMapComponent = (x, y) => {\r\n    const element = <MapCont x={x} y={y} />;\r\n    ReactDOM.render(element, document.getElementById('root'));\r\n  }\r\n      \r\n  render() {\r\n    const {data,currentPage,sort,sortField} = this.state;\r\n    let displayData = [];\r\n    filteredData = this.getFilteredData();\r\n    if (data.length !== 0 && filteredData !== null) {\r\n      displayData = _.chunk(filteredData, pageSize)[currentPage];\r\n      if (displayData !== undefined && displayData.length === 0) {\r\n        displayData = []\r\n      }\r\n      pageCount = Math.ceil(filteredData.length / pageSize);\r\n    };\r\n          \r\n    return (\r\n      <div className=\"container\">\r\n        {<React.Fragment>\r\n          <TableSearch onSearch={this.searchHandler}/> \r\n          <Table \r\n            data={displayData}\r\n            onSort={this.onSort}\r\n            onRemove={this.onRemove}\r\n            onMapComponent={this.getMapComponent}\r\n            sort={sort}\r\n            sortField={sortField}\r\n          />\r\n        </React.Fragment>\r\n        }\r\n        { data.length > pageSize ?\r\n          <ReactPaginate\r\n            previousLabel={'<'}\r\n            nextLabel={'>'}\r\n            breakLabel={'...'}\r\n            breakClassName={'break-me'}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={this.pageChangeHandler}\r\n            containerClassName={'pagination'}\r\n            activeClassName={'active'}\r\n            pageClassName=\"page-item\"\r\n            pageLinkClassName=\"page-link\"\r\n            previousClassName=\"page-item\"\r\n            nextClassName=\"page-item\"\r\n            previousLinkClassName=\"page-link\"\r\n            nextLinkClassName=\"page-link\"\r\n            forcePage={currentPage}\r\n          /> : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nexport default props => (\r\n    <table className=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th onClick={props.onSort.bind(null, 'job_title')}>\r\n                    Job Title {props.sortField === 'job_title' ? <small>{props.sort}</small> : null}\r\n                </th>\r\n                <th onClick={props.onSort.bind(null, 'organization_name')}>\r\n                    Organization Name {props.sortField === 'organization_name' ? <small>{props.sort}</small> : null}\r\n                </th>\r\n                <th>Location Coordinates</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            { props.data !== [] && props.data !== undefined ? \r\n                props.data.map(item =>(\r\n                    <tr key={item._id}>\r\n                        <td>{item.job_title}</td>\r\n                        <td>{item.organization_name}</td>\r\n                        <td onClick={() => props.onMapComponent(item.location_coordinates[0], item.location_coordinates[1])\r\n                            }\r\n                        >\r\n                            {item.location_coordinates}\r\n                        </td>\r\n                        <td>\r\n                        <button \r\n                            className=\"btn btn-outline-secondary\"\r\n                            onClick={() => props.onRemove(item._id)} >Delete\r\n                        </button>\r\n                        </td>\r\n                    </tr>\r\n                )) : \r\n                <tr></tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n)\r\n","import React, {useState} from 'react'\r\n\r\nexport default props => {\r\n    const [value, setValue] = useState('')\r\n    const valueChangeHandler = event => {\r\n        setValue(event.target.value)\r\n      }\r\n\r\n    return (\r\n        <div className=\"input-group mb-3 mt-3\">\r\n             <div className=\"input-group-prepend\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\"\r\n                    onClick={() => props.onSearch(value)} >Search\r\n                </button>\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                onChange={valueChangeHandler} \r\n                value={value}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n\r\n    static = {\r\n        zoom: 14,\r\n        // initialCenter: {\r\n        //     lat: -1.2884,\r\n        //     lng: 36.8233\r\n        // },\r\n        centerAroundCurrentLocation: false,\r\n        visible: true\r\n    }; \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { lt, lg } = this.props;\r\n        this.state = {\r\n            currentLocation: {\r\n            lat: lt,\r\n            lng: lg\r\n            }\r\n        }\r\n    }\r\n    \r\n    recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n\r\n        if (map) {\r\n            let center = new maps.LatLng(current.lat, current.lng);\r\n            map.panTo(center);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(() => {\r\n            //   const coords = pos.coords;\r\n              const {lt, lg} = this.props;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: lt,\r\n                  lng: lg\r\n                }\r\n              });\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n    }\r\n \r\n    loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom, lt, lg } = this.props;\r\n        //   const { lt, lg } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lt, lg);\r\n    \r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: zoom\r\n            }\r\n            );\r\n            // / maps.Map() is constructor that instantiates the map\r\n        this.map = new maps.Map(node, mapConfig);\r\n        }\r\n    }\r\n\r\n    renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n    \r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const style = Object.assign({}, mapStyles.map);\r\n        return (\r\n          <div>\r\n            <div style={style} ref=\"map\">\r\n              Loading map...\r\n            </div>\r\n            {this.renderChildren()}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\n\r\nexport default CurrentLocation;","import React, { Component } from 'react';\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from '../FuncMap/FuncMap';\r\n\r\nconst mapStyles = {\r\n  width: '100%',\r\n  height: '100%'\r\n};\r\n\r\nexport class MapCont extends Component {\r\n\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {}\r\n    };\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n        selectedPlace: props,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n    });\r\n\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            });\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n        <CurrentLocation\r\n            centerAroundCurrentLocation\r\n            google={this.props.google}\r\n            // onMapComponent={this.props.onMapComponent}\r\n            lt={this.props.x}\r\n            lg={this.props.y}\r\n        >\r\n            <Marker\r\n                onClick={this.onMarkerClick}\r\n                name={'current location coordinates'}\r\n            />\r\n            <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n            >\r\n                <div>\r\n                    <h4>{this.state.selectedPlace.name}</h4>\r\n                </div>\r\n            </InfoWindow>\r\n        </CurrentLocation>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCzuHWi32YAxnKV-3LHCinRXishtoedpx8'\r\n})(MapCont);","// import React from 'react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './myApp';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}